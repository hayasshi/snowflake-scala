snowflake-scala {

  akka-dynamodb {
    # Akka Remote をつかって IdWorker に接続する際のアドレスを指定する
    # デフォルトでは Akka Remote Artery の canonical なアドレスを利用する
    #
    # TODO: Akka Remote で接続できる機能は未実装なので、利用側で実装する必要がある
    canonical.hostname = ${akka.remote.artery.canonical.hostname}
    canonical.port = ${akka.remote.artery.canonical.port}

    # WorkerId の pre-assign 時に安全マージンとして待機する時間
    #
    # DynamoDB の Conditional-Put をつかって pre-assign しているが、
    # 同時に書き込みが発生した場合に、DynamoDB の状態が収束するまでの待機時間をイメージ(発生し得る状態なのかは未検証)
    #
    # pre-assign 後、この時間待機してから assign データに Update する
    initial-wait = 5 seconds

    # WorkerId のセッションタイムアウト
    # DynamoDB に assign されたデータに、この時間 heartbeat されない場合、該当 WorkerId に割り当てられたプロセスが停止したとみなす
    session-timeout = 5 min

    # hoge
    heartbeat-interval = 2 seconds
  }

}
